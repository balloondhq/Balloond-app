events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/x-js text/x-cross-domain-policy application/x-font-ttf application/x-font-opentype application/vnd.ms-fontobject image/x-icon;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=voice:10m rate=5r/s;

    # Connection limits
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Cache zones
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=7d;
    proxy_cache_path /var/cache/nginx/voice levels=1:2 keys_zone=voice_cache:10m max_size=500m inactive=24h;

    # Upstream servers
    upstream backend {
        least_conn;
        server backend:3000 max_fails=3 fail_timeout=30s;
    }

    upstream websocket {
        ip_hash;
        server backend:3001;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name api.balloond.com app.balloond.com;
        return 301 https://$host$request_uri;
    }

    # API Server
    server {
        listen 443 ssl http2;
        server_name api.balloond.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/balloond.crt;
        ssl_certificate_key /etc/nginx/ssl/balloond.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; img-src 'self' https: data: blob:; media-src 'self' https: blob:;" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # CORS headers
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;

        # Request size limits
        client_max_body_size 50M; # For voice messages and photos
        client_body_buffer_size 10M;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://backend/health;
            proxy_cache off;
        }

        # Auth endpoints (stricter rate limiting)
        location ~ ^/auth/(login|register|forgot-password) {
            limit_req zone=auth burst=2 nodelay;
            limit_conn addr 5;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Upload endpoints (file size and rate limiting)
        location ~ ^/(users/photos|moderation/upload-photo) {
            limit_req zone=upload burst=5 nodelay;
            limit_conn addr 3;
            client_max_body_size 10M;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Voice message endpoints
        location ~ ^/chat/conversations/.*/voice {
            limit_req zone=voice burst=10 nodelay;
            limit_conn addr 5;
            client_max_body_size 20M;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket endpoint
        location /socket.io/ {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_buffering off;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            keepalive_timeout 86400;
        }

        # Stripe webhooks (no rate limiting, verify signature instead)
        location /webhooks/stripe {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass raw body for signature verification
            proxy_set_header Content-Type $content_type;
            proxy_set_header X-Stripe-Signature $http_stripe_signature;
        }

        # API endpoints (general)
        location / {
            limit_req zone=api burst=20 nodelay;
            limit_conn addr 10;

            # Enable caching for GET requests
            proxy_cache api_cache;
            proxy_cache_valid 200 302 1m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_bypass $http_authorization;
            proxy_no_cache $http_authorization;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
        }
    }

    # Frontend Application Server
    server {
        listen 443 ssl http2;
        server_name app.balloond.com;

        # SSL Configuration (same as API)
        ssl_certificate /etc/nginx/ssl/balloond.crt;
        ssl_certificate_key /etc/nginx/ssl/balloond.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' https://api.balloond.com wss://api.balloond.com https://*.stripe.com https://*.firebase.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.stripe.com https://*.firebase.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; media-src 'self' blob: https://balloond-production.s3.amazonaws.com; connect-src 'self' https://api.balloond.com wss://api.balloond.com https://*.stripe.com https://*.firebase.com;" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        root /usr/share/nginx/html;
        index index.html;

        # Static assets (with caching)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 7d;
            add_header Cache-Control "public, immutable";
            proxy_cache static_cache;
            proxy_cache_valid 200 7d;
        }

        # Voice messages from S3 (with caching)
        location /media/voice/ {
            proxy_pass https://balloond-production.s3.amazonaws.com/voice-messages/;
            proxy_set_header Host balloond-production.s3.amazonaws.com;
            proxy_cache voice_cache;
            proxy_cache_valid 200 24h;
            expires 24h;
            add_header Cache-Control "public, max-age=86400";
        }

        # React app (SPA routing)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Service worker
        location /service-worker.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            expires 0;
        }
    }

    # Status page (internal only)
    server {
        listen 8080;
        server_name _;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12; # Docker network
            deny all;
        }
    }
}
